% start S

###################
# TESTS
###################


#S[SEM = <?subj(?vp)>] -> NP[SEM=?subj] VP[SEM=?vp]
#VP[SEM=?v] -> IV[SEM=?v]
#VP[SEM=<?v(?n)>] -> TV[SEM=?v] NP[SEM=?n]
#NP[SEM=<?det(?n)>] -> Det[SEM=?det] N[SEM=?n]
#
#Det[SEM=<\Q P.exists x.(Q(x) & P(x))>] -> 'a'
#Det[SEM=<\Q P.all x.(Q(x) -> P(x))>] -> 'every'
#N[SEM=<\x.dog(x)>] -> 'dog'
#N[SEM=<\x.cat(x)>] -> 'cat'
#
#IV[SEM=<\x.exists e.(barking(e) & barker(e,x))>] -> 'barks'
#TV[SEM=<\X y.exists e.(biting(e) & biter(e,y) & bitten(e,y))>] -> 'bites'


###################
# START SYMBOL
###################

S[SEM=<?np(?vp)>] -> NP[SEM=?np] VP[SEM=?vp]


###################
# PHRASE RULES
###################

# Phrases: Verbs:
VP[SEM=?v] -> IV[SEM=?v]
VP[SEM=<?v(?n)>] -> TV[SEM=?v] NP[SEM=?n]

# Phrases: Nouns:
NP[SEM=?n1] -> NNP[SEM=?n1]
NP[SEM=<?d(?n)>] -> Det[SEM=?d] N[SEM=?n]

# NP[SEM=<?d1(?n1) | ?d1(?n2)>] -> NNP[SEM=?n1] CC N[SEM=?n2]
# NP[SEM=<?d1(?n1) | ?d1(?n2)>] -> Det[SEM=?d1] N[SEM=?n1] CC N[SEM=?n2]


###################
# TERMINAL RULES
###################

# Terminals: Determiners:
Det[SEM=<\Q P.exists x.(Q(x) & P(x))>] -> 'a' | 'an'
Det[SEM=<\Q P.all x.(Q(x) -> P(x))>] -> 'every' | 'all'

# Terminals: Conjunctions:
CC -> 'or'

# Terminals: Proper Nouns:
NNP[SEM=<\P.P(John)>] -> 'John'
NNP[SEM=<\P.P(Jack)>] -> 'Jack'
NNP[SEM=<\P.P(Mary)>] -> 'Mary'

# Terminals: Common Nouns:
N[SEM=<\x.bagel(x)>] -> 'bagel'
N[SEM=<\x.essay(x)>] -> 'essay'
N[SEM=<\x.person(x)>] -> 'person'
N[SEM=<\x.sandwich(x)>] -> 'sandwich'
N[SEM=<\x.soda(x)>] -> 'soda'
N[SEM=<\x.student(x)>] -> 'student'
N[SEM=<\x.students(x)>] -> 'students'

# Terminals: Intransitive Verbs:
IV[SEM=<\x.exists e.(eating(e) & eater(e,x))>] -> 'eat' | 'eats'
IV[SEM=<\x.exists e.(drinking(e) & drinker(e,x))>] -> 'drink'

# Terminals: Transitive Verbs:
TV[SEM=<\X y.X(\x.exists e.(eating(e) & eater(e,x) & eaten(e,y)))>] -> 'eat' | 'eats'
TV[SEM=<\X y.X(\x.exists e.(drinking(e) & drinker(e,x) & drinken(e,y)))>] -> 'drinks'
TV[SEM=<\X y.X(\x.exists e.(writing(e) & writer(e,x) & written(e,y)))>] -> 'write' | 'writes'
